version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    ports:
      - 80:80
      - 8081:8080
    volumes:
      - "$PWD/traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  web:
    build: ./app
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python manage.py collectstatic --noinput && python manage.py migrate &&
             python manage.py createsuperuser --noinput && python manage.py runserver 0.0.0.0:${DEV_PORT}'
    volumes:
      - ./app:/app
    expose:
      - ${DEV_PORT}
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=${DEV_DOMAIN}
      - DATABASE_URL=postgresql://${DEV_DB_USER}:${DEV_DB_PASS}@db:5432/${DEV_DB_DATABASE}
      - SECRET_KEY=${DEV_SECRET_KEY}
      - DEFAULT_PORT=${DEV_PORT}
      - DJANGO_SUPERUSER_USERNAME=${DEV_ADMIN_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DEV_ADMIN_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=${DEV_ADMIN_EMAIL}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${DEV_DOMAIN}`)"

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DEV_DB_USER}
      - POSTGRES_PASSWORD=${DEV_DB_PASS}
      - POSTGRES_DB=${DEV_DB_DATABASE}

volumes:
  postgres_data: